{"version":3,"sources":["SongPicker/Duration.js","SongPicker/SongPlayer.js","ImagePicker/ImageDescription.js","ImagePicker/Image.js","ImagePicker/ImageGuide.js","ImagePicker/ImageGridPage.js","ImagePicker/ZoomedImage.js","ImagePicker/CloseButton.js","ImagePicker/SelectImageButton.js","ImagePicker/ZoomedImagePage.js","SongPicker/SelectSongButton.js","SongPicker/SongCardInfo.js","SongPicker/SongCard.js","SongPicker/SongCardList.js","SongPicker/SongPickerPage.js","JournalPage/LocationSearchInput.js","JournalPage/JournalForm.js","JournalPage/JournalPage.js","MeditationPage/MeditationPage.js","App.js","SharePage/SharePage.js","serviceWorker.js","index.js"],"names":["Duration","className","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","format","string","slice","SongPlayer","state","url","process","props","song_path","playing","controls","volume","muted","played","loaded","duration","playbackRate","load","setState","pip","handlePlayPause","handlePlay","handlePause","handleSeekMouseDown","e","seeking","handleSeekChange","parseFloat","target","value","handleSeekMouseUp","player","seekTo","handleProgress","handleDuration","ref","this","width","height","onPlay","onPause","onBuffer","console","log","onSeek","onEnded","handleEnded","onError","onProgress","onDuration","onClick","type","min","max","step","onMouseDown","onChange","onMouseUp","React","Component","hot","module","ImageDescription","contributor","artist","content","InfoCircleOutlined","Meta","Card","Image","id","title","image_path","imageCard","cover","alt","src","description","imageSelectEnabled","to","ImageGuide","ImageGridPage","images","imagesToRender","totalNumOfImages","length","i","col1","col2","push","justify","span","lastImage","ZoomedImage","match","params","imageId","CloseButton","CloseOutlined","SelectImageButton","onClickSelectImageButton","ZoomedImagePage","SelectSongButton","songId","onClickSelectSongButton","SongCardInfo","composer","instrument","SongCard","SongCardList","currentPage","songs","totalSongs","performer","map","song","defaultCurrent","pageSize","total","page","SongPickerPage","image","imageSlectEnabled","LocationSearchInput","handleChange","address","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","catch","error","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","JournalForm","layout","labelCol","wrapperCol","name","onFinish","values","validateMessages","required","types","email","number","range","Item","label","rules","offset","valuePropName","TextArea","htmlType","JournalPage","MeditationPage","App","selectedImageId","selectedSongId","journal","song_contributor_url","curIamgeSelectEnabled","selectImageHandler","toggleImageSelectEnabled","path","exact","render","bind","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fb6b4da1.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Duration ({ className, seconds }) {\n  return (\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n      {format(seconds)}\n    </time>\n  )\n}\n\nfunction format (seconds) {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nfunction pad (string) {\n  return ('0' + string).slice(-2)\n}\n","import React from 'react';\nimport { hot } from 'react-hot-loader'\nimport ReactPlayer from 'react-player';\nimport Duration from './Duration';\nimport { PlayCircleOutlined, PauseCircleOutlined} from '@ant-design/icons';\n\n// import './reset.css'\n// import './defaults.css'\nimport './SongPickerPage.css'\n\nclass SongPlayer extends React.Component {\n    state = {\n        url: process.env.PUBLIC_URL + this.props.song_path,\n        playing: false,\n        controls: false,\n        volume: 0.8,\n        muted: false,\n        played: 0,\n        loaded: 0,\n        duration: 0,\n        playbackRate: 1.0,\n      }\n    \n      load = url => {\n        this.setState({\n          url,\n          played: 0,\n          loaded: 0,\n          pip: false\n        })\n      }\n    \n      handlePlayPause = () => {\n        this.setState({ playing: !this.state.playing })\n      }\n    \n      handlePlay = () => {\n        this.setState({ playing: true })\n      }\n    \n      handlePause = () => {\n        this.setState({ playing: false })\n      }\n    \n      handleSeekMouseDown = e => {\n        this.setState({ seeking: true })\n      }\n    \n      handleSeekChange = e => {\n        this.setState({ played: parseFloat(e.target.value) })\n      }\n    \n      handleSeekMouseUp = e => {\n        this.setState({ seeking: false })\n        this.player.seekTo(parseFloat(e.target.value))\n      }\n    \n      handleProgress = state => {\n        // We only want to update time slider if we are not currently seeking\n        if (!this.state.seeking) {\n          this.setState(state)\n        }\n      }\n    \n      handleDuration = (duration) => {\n        this.setState({ duration })\n      }\n    \n      ref = player => {\n        this.player = player\n      }\n    \n      render () {\n        const { url, playing, controls, played, duration, playbackRate, pip } = this.state\n    \n        return (\n          <div className='song-card'>\n            <section className='section'>\n              <div className='player-wrapper'>\n                <ReactPlayer\n                  ref={this.ref}\n                  className='react-player'\n                  width='0%'\n                  height='0%'\n                  url={url}\n                  pip={pip}\n                  playing={playing}\n                  controls={controls}\n                  playbackRate={playbackRate}\n                  onPlay={this.handlePlay}\n                  onPause={this.handlePause}\n                  onBuffer={() => console.log('onBuffer')}\n                  onSeek={e => console.log('onSeek', e)}\n                  onEnded={this.handleEnded}\n                  onError={e => console.log('onError', e)}\n                  onProgress={this.handleProgress}\n                  onDuration={this.handleDuration}\n                />\n              </div>\n\n              <button onClick={this.handlePlayPause}\n                      className=\"song-play-button\">\n                      {playing ? 'Pause' : 'Play'}\n              </button>\n\n              <Duration className=\"song-play-time\" \n                        seconds={duration * played} \n              />\n\n              <input className=\"slider\"\n                  type='range' min={0} max={0.999999} step='any'\n                  value={played}\n                  onMouseDown={this.handleSeekMouseDown}\n                  onChange={this.handleSeekChange}\n                  onMouseUp={this.handleSeekMouseUp}\n              />\n\n              <Duration className=\"song-play-time\" \n                        seconds={duration * (1 - played)} \n              />\n            </section>\n          </div>\n        )\n      }\n}\n\nexport default hot(module) (SongPlayer);","import React from 'react';\nimport { Popover} from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport './ImageDescription.css';\n\nclass ImageDescription extends React.Component {\n    render() {\n        let date = this.props.date ? this.props.date : \"dates unknown\";\n        let contributor = \"contributed by \" + this.props.contributor;\n\n        return(\n            <div>\n                <p className=\"description-text\">{this.props.artist + \" (\" + date + \")\"}</p>\n                <Popover className=\"description-popup\" content={contributor} ><InfoCircleOutlined /></Popover>\n            </div>\n        );\n    }\n}\n\nexport default ImageDescription;","import React from 'react';\nimport { Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport ImageDescription from './ImageDescription';\nimport './Image.css'\n\nconst { Meta } = Card;\n\nclass Image extends React.Component {\n    render() {\n        let id = this.props.id;\n        let title = this.props.title;\n        let image_path = this.props.image_path;\n        let imageCard = \n            <Card className=\"images\"\n                cover={\n                    <img alt={title}\n                        src={image_path}\n                />}\n            >\n                <Meta title={title}\n                      description={<ImageDescription {...this.props}/>}\n                />\n            </Card>\n\n        return (\n            this.props.imageSelectEnabled ? <Link to={`/${id}`}> {imageCard} </Link> : <div>{imageCard}</div>\n        )\n    }\n}\n\nexport default Image; ","import React from 'react';\nimport './ImageGuide.css';\n\nclass ImageGuide extends React.Component {\n    render() {\n        return (\n            <div className=\"Guide-box\">\n                <p> This of a place you would love to visit. </p>\n                <p> It could be a real place or an imaginary place or one you've heard of but never seen. </p>\n                <p> Or choose a piece of art that speaks to you. </p>\n            </div>\n        );\n    }\n}\n\nexport default ImageGuide;","import React from 'react';\nimport { Row, Col} from 'antd';\nimport Image from './Image';\nimport ImageGuide from './ImageGuide';\nimport './ImageGrid.css'\n\nclass ImageGridPage extends React.Component {\n    render() {\n        let images = this.props.images;\n        let imagesToRender = [];\n        if (images) {\n            var totalNumOfImages = images.length;\n            for (var i = 0; i < totalNumOfImages - 1; i+=2) {\n                var col1 = images[i];\n                var col2 = images[i + 1];\n                imagesToRender.push(\n                    <Row justify=\"space-between\" className=\"Row\">\n                        <Col className=\"Col\" span={12}>\n                            <Image {...col1} imageSelectEnabled={this.props.imageSelectEnabled}/>\n                        </Col>\n                        <Col className=\"Col\" span={12}>\n                            <Image {...col2} imageSelectEnabled={this.props.imageSelectEnabled}/>\n                        </Col>\n                    </Row>\n                );\n            }\n\n            if (totalNumOfImages % 2 === 1) {\n                var lastImage = images[totalNumOfImages - 1];\n                imagesToRender.push(\n                    <Row justify=\"center\" className=\"Row\">\n                        <Col className=\"Col\" span={12}>\n                            <Image {...lastImage} imageSelectEnabled={this.props.imageSelectEnabled}/>\n                        </Col>\n                    </Row>\n                )\n            }\n        }\n        \n        return (\n            <div className=\"page\">\n                <ImageGuide/>\n                {imagesToRender}\n            </div>\n            \n        )\n    }\n}\n\nexport default ImageGridPage;","import React from 'react';\n\nimport './ZoomedImage.css';\n\nclass ZoomedImage extends React.Component {\n    render() {\n        let images = this.props.images;\n        let imageId = this.props.match.params.imageId;\n        let image_path = images[imageId].image_path\n\n        return (\n            <img className=\"zoomed-image\" src={image_path} alt=\"zoomed image\"></img>\n        );\n    }\n}\n\nexport default ZoomedImage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport './CloseButton.css';\n\nclass CloseButton extends React.Component {\n    render() {\n        return (\n            <Link to=\"/\">\n                <CloseOutlined className=\"close-button\"/>\n            </Link>\n        );\n    }\n}\n\nexport default CloseButton;","import React from 'react';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport './SelectImageButton.css';\n\nclass SelectImageButton extends React.Component {\n    render() {\n        let imageId = this.props.match.params.imageId;\n        console.log('selected image: ' + imageId);\n\n        return(\n            <Link to={'/songs'}>\n                <Button onClick={() => this.props.onClickSelectImageButton(imageId)}\n                        className=\"select-image-button\" type=\"default\">Select</Button>\n            </Link>\n        );\n    }\n}\n\nexport default SelectImageButton;","import React from 'react';\nimport ZoomedImage from \"./ZoomedImage\";\nimport CloseButton from \"./CloseButton\";\nimport SelectImageButton from \"./SelectImageButton\";\nimport '../App.css';\n\nclass ZoomedImagePage extends React.Component {\n    render() {\n        return (\n            <div className=\"page\">\n                <SelectImageButton {...this.props}/>\n                <CloseButton/>\n                <ZoomedImage {...this.props}/>\n            </div>\n        );\n    }\n}\n\nexport default ZoomedImagePage;","import React from 'react';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport './SongPickerPage.css';\n\nclass SelectSongButton extends React.Component {\n    render() {\n        let songId = this.props.id;\n\n        return(\n            <Link to={'/meditation'}>\n                <Button onClick={() => this.props.onClickSelectSongButton(songId)}\n                        className=\"song-select-button\"\n                        type=\"default\">\n                    Select\n                </Button>\n            </Link>\n        );\n    }\n}\n\nexport default SelectSongButton;","import React from 'react';\nimport { Button } from 'antd';\nimport SelectSongButton from './SelectSongButton';\n\nclass SongCardInfo extends React.Component {\n    render() {\n        return (\n            <div className=\"song-card\">\n                {/* <Button className=\"song-select-button\" type=\"default\">Select</Button> */}\n                <SelectSongButton className=\"song-select-button\" {...this.props}/>\n                <span className=\"song-title\">{this.props.title}</span>\n                <span className=\"song-composer\">{' | ' + this.props.composer}</span>\n                <span className=\"song-instrument\">{' | ' + this.props.instrument}</span>\n            </div>\n        )\n    }\n}\n\nexport default SongCardInfo;","import React from 'react';\nimport { Card } from 'antd';\n\nimport SongPlayer from './SongPlayer';\nimport SongCardInfo from './SongCardInfo';\n\nclass SongCard extends React.Component {\n    render() {\n        const { id, title, composer, instrument, song_path } = this.props;\n        return (\n            <Card\n                title={<SongCardInfo {...this.props}\n                                     />}\n            >\n                <SongPlayer song_path={song_path}/>\n            </Card>\n        );\n    }\n}\n\nexport default SongCard;","import React from 'react';\nimport { Pagination } from 'antd';\n\nimport SongCard from './SongCard';\n\nclass SongCardList extends React.Component {\n    state = {\n        currentPage: 1\n    }\n\n    render() {\n        const songs = this.props.songs;\n        const onClickSelectSongButton = this.props.onClickSelectSongButton;\n        const { id, title, performer, composer, instrument, contributor, song_path } = this.props.songs;\n        const totalSongs = songs.length;\n        const pageSize = 5;\n        const onChange = page => {\n            console.log(page);\n            this.setState({\n              currentPage: page,\n            });\n          };\n\n        return (\n            <div>\n                {songs.map((song) => <SongCard \n                                            id={song.id}\n                                            title={song.title}\n                                            composer={song.composer}\n                                            instrument={song.instrument}\n                                            song_path={song.song_path}\n                                            onClickSelectSongButton={onClickSelectSongButton}\n                                        />\n                ).slice((this.state.currentPage - 1) * pageSize, this.state.currentPage * pageSize)}\n                <Pagination className=\"pagination-bar\"\n                            defaultCurrent={1}\n                            pageSize={pageSize}\n                            total={totalSongs}\n                            onChange={onChange} />\n            </div>\n\n        )\n    }\n}\n\nexport default SongCardList;","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Image from '../ImagePicker/Image';\nimport SongCardList from './SongCardList';\nimport './SongPickerPage.css';\n\nclass SongPickerPage extends React.Component {\n\n    render() {\n        return (\n            <div className='page'>\n                <Row>\n                    <Col span={12}>\n                        <Image {...this.props.image}\n                            imageSlectEnabled={this.props.imageSlectEnabled}>\n                        </Image>\n                    </Col>\n                    <Col span={12}>\n                        <SongCardList songs={this.props.songs}\n                                      onClickSelectSongButton={this.props.onClickSelectSongButton}\n                        />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default SongPickerPage;","import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\n\n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\nexport default LocationSearchInput;","import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport LocationSearchInput from './LocationSearchInput';\nclass JournalForm extends React.Component {\n    render() {\n        const layout = {\n          labelCol: { span: 8 },\n          wrapperCol: { span: 16 },\n        };\n        const tailLayout = {\n          wrapperCol: {\n            offset: 3,\n            span: 16,\n          },\n        }\n        const onFinish = (values) => {\n            console.log('Success:', values);\n          };\n        \n        const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n        };\n        const validateMessages = {\n          required: '${label} is required!',\n          types: {\n            email: '${label} is not validate email!',\n            number: '${label} is not a validate number!',\n          },\n          number: {\n            range: '${label} must be between ${min} and ${max}',\n          },\n        }\n        return (\n            <div>\n              <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n                <Form.Item name={['user', 'name']} label=\"First Name\" rules={[{ required: true }]}>\n                  <Input />\n                </Form.Item>\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                  <Checkbox>Anonymous</Checkbox>\n                </Form.Item>\n\n                <Form.Item name={['user', 'email']} label=\"Location\" rules={[{ type: 'Location',required: true }]}>\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name={['user', 'introduction']} label=\"How you feel\">\n                  <Input.TextArea />\n                </Form.Item>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n              <LocationSearchInput></LocationSearchInput>\n            </div>\n        );\n    }\n}\n\nexport default JournalForm;","import React from 'react';\nimport { Row,Col, Form, Input, Button, Checkbox } from 'antd';\nimport JournalForm from './JournalForm';\nimport Image from '../ImagePicker/Image';\nimport Song from '../SongPicker/SongCard';\nimport './JournalPage.css';\nclass JournalPage extends React.Component {\n    render() {\n        const {song, image} = this.props;\n        return (\n        <Row>\n            <Col span={3} className={`height-${200}`}>\n            </Col>\n            <Col span={9} className='left-half'>\n                <Row >\n                    <Col className={`song-box` } span={24}><Song {...song}></Song></Col>\n                </Row>\n                <Row >\n                    <Col className={`image-box` } span={24}><Image className=\"image-box\" {...image}></Image></Col>\n                </Row>\n            </Col>\n            <Col span={2}></Col>\n            <Col span={8} className=\"journal-form\">\n                <Row className='blank-row'>\n\n                </Row>\n                <Row >\n                    <Col span={24}><JournalForm></JournalForm></Col>\n                </Row>\n            </Col>\n        </Row>)\n    }\n}\n\nexport default JournalPage;\n","import React from 'react';\nimport SongCard from '../SongPicker/SongCard';\nimport Image from '../ImagePicker/Image';\n\nclass MeditationPage extends React.Component {\n    render() {\n        return (\n            <div>\n                <SongCard {...this.props.song}/>\n                <Image {...this.props.image}/>\n            </div>\n        )\n    }\n}\n\nexport default MeditationPage;","// libraries\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport axios from 'axios';\n\n// compnents\nimport ImageGridPage from './ImagePicker/ImageGridPage';\nimport ZoomedImagePage from './ImagePicker/ZoomedImagePage';\nimport SongPickerPage from './SongPicker/SongPickerPage';\n// import MeditationPage from './MeditationPage/MeditationPage';\n// import SharePage from './SharePage/SharePage';\nimport JournalPage from './JournalPage/JournalPage';\nimport MeditationPage from './MeditationPage/MeditationPage';\nimport SharePage from './SharePage/SharePage';\n\n// css\nimport './App.css';\nimport 'antd/dist/antd.css'\n\nclass App extends React.Component {\n  /*\n    state = {\n        images:[]\n    }\n    componentDidMount() {\n        axios.get('http://localhost:5000/images')\n            .then(response => {\n                let images = response.data.images;\n                this.setState({images});\n                console.log(response);\n            });\n    }\n    */\n    state = {\n        imageSelectEnabled : true,\n\n        selectedImageId : 0,\n        selectedSongId : 1,\n        journal : null,\n        songs : [\n            {\n                id : 1,\n                title : \"Air on the G String\",\n                performer : \"\",\n                composer : \"Johann Sebastian Bach\",\n                instrument : \"Flute, Harpsichord\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_contributor_url: \"\",\n                song_path : \"/songs/Air on the G String.mp3\"\n            },\n            {\n                id : 2,\n                title : \"Alone\",\n                performer : \"Tomas Vallejo\",\n                composer : \"Tomas Vallejo\",\n                instrument : \"Guitar\",\n                contributor : \"Tomas Vallejo\",\n                song_path : \"/songs/Alone.wav\"\n            },\n            {\n                id : 3,\n                title : \"Amazing Grace\",\n                performer : \"David Deveau, Richard Stoltzman\",\n                composer : \"John Newton\",\n                instrument : \"Clarinet, Piano\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_path : \"/songs/Amazing Grace.mp3\"\n            },\n            ,\n            {\n                id : 3,\n                title : \"Amazing Grace\",\n                performer : \"David Deveau, Richard Stoltzman\",\n                composer : \"John Newton\",\n                instrument : \"Clarinet, Piano\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_path : \"/songs/Amazing Grace.mp3\"\n            },\n            {\n                id : 3,\n                title : \"Amazing Grace\",\n                performer : \"David Deveau, Richard Stoltzman\",\n                composer : \"John Newton\",\n                instrument : \"Clarinet, Piano\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_path : \"/songs/Amazing Grace.mp3\"\n            },\n            {\n                id : 3,\n                title : \"Amazing Grace\",\n                performer : \"David Deveau, Richard Stoltzman\",\n                composer : \"John Newton\",\n                instrument : \"Clarinet, Piano\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_path : \"/songs/Amazing Grace.mp3\"\n            },\n            {\n                id : 3,\n                title : \"Amazing Grace\",\n                performer : \"David Deveau, Richard Stoltzman\",\n                composer : \"John Newton\",\n                instrument : \"Clarinet, Piano\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n                song_path : \"/songs/Amazing Grace.mp3\"\n            }\n        ],\n\n        images : [\n            {\n                id : 0,\n                image_path : '/images/1.png',\n                title : \"A Tent in the Rockies\",\n                artist : \"John Singer Sargent\",\n                date : \"1916\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 1,\n                image_path : '/images/2.png',\n                title : \"El Jaleo\",\n                artist : \"John Singer Sargent\",\n                date : \"1882\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 2,\n                image_path : '/images/3.png',\n                title : \"Nocturne, Blue and Silver: Battersea Reach\",\n                artist : \"James McNeil Whistler\",\n                date : \"\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 3,\n                image_path : '/images/4.png',\n                title : \"YoYo Falls\",\n                artist : \"John Singer Sargent\",\n                date : \"1916\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 4,\n                image_path : '/images/5.png',\n                title : \"Scenes from the Tale of Genji \",\n                artist : \"Kano Tsunenobu\",\n                date : \"1677\"\n            },\n            {\n                id : 5,\n                image_path : '/images/6.png',\n                title : \"Porpoises\",\n                artist : \"Charles Herbert Woodbury\",\n                date : \"1916\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 6,\n                image_path : '/images/7.png',\n                title : \"The Lido\",\n                artist : \"Paul H. Tilton\",\n                date : \"1894\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n            {\n                id : 7,\n                image_path : '/images/8.png',\n                title : \"The Terrace, St. Tropez\",\n                artist : \"Henri Matisse\",\n                date : \"1904\",\n                contributor : \"Isabella Stewart Gardner Museum\",\n            },\n        ]\n    }\n\n//   componentDidMount() {\n//     let new_image_path = this.state.images.map((image) => {\n//         let path = image.image_path;\n//         return ( { ...image, image_path : process.env.PUBLIC_URL + path } );\n//     })\n//     this.setState(new_image_path);\n//   }\n\n  selectImageHandler(id) {\n      this.setState({\n          selectedImageId : id\n      })\n  }\n\n  toggleImageSelectEnabled() {\n        let curIamgeSelectEnabled = this.state.imageSelectEnabled;\n        this.setState({\n            imageSelectEnabled : !curIamgeSelectEnabled\n        })\n  }\n\n  onClickSelectImageButton(id) {\n      this.selectImageHandler(id);\n      this.toggleImageSelectEnabled();\n  }\n\n  onClickSelectSongButton(id) {\n      this.setState({\n          selectedSongId : id\n      })\n  }\n\n    render() {\n    \n      return (\n        <div className=\"App\">\n          <Router>\n              <Switch>\n                    <Route path=\"/songs\" exact render={() => <SongPickerPage songs={this.state.songs}\n                                                                       image={this.state.images[this.state.selectedImageId]}\n                                                                       onClickSelectSongButton={this.onClickSelectSongButton.bind(this)}\n                                                                       />}/>\n                    <Route path=\"/\" exact render={() => <ImageGridPage images={this.state.images}\n                                                                   imageSelectEnabled={true}/>}/>\n                    {/* <Route path=\"/meditation\" exact render={() => <MeditationPage song={this.state.songs[this.state.selectedSongId - 1]} */}\n                                                                                  {/* image={this.state.images[this.state.selectedImageId]}/>}/> */}\n                    <Route path=\"/share\" exact render={() => <JournalPage image={this.state.images[this.state.selectedImageId]}\n                                                                          song={this.state.songs[this.state.selectedSongId - 1]}\n                                                    />}/>\n                    <Route path=\"/meditation\" exact render={() => <MeditationPage song={this.state.songs[this.state.selectedSongId - 1]}\n                                                                                  image={this.state.images[this.state.selectedImageId]}/>}/>\n                    <Route path=\"/:imageId\" render={(props) => <ZoomedImagePage images={this.state.images}\n                                                                                onClickSelectImageButton={this.onClickSelectImageButton.bind(this)}\n                                                                                toggleImageSelectEnabled={this.toggleImageSelectEnabled.bind(this)}\n                                                                          {...props}/>}/>\n              </Switch>\n          </Router>\n        </div>\n      );\n    }\n  }\n\nexport default App;\n","import React from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nclass SharePage extends React.Component {\n    render() {\n        const layout = {\n            labelCol: {\n              span: 6,\n            },\n            wrapperCol: {\n              span: 16,\n            },\n          };\n\n        const tailLayout = {\n            wrapperCol: {\n            offset: 6,\n            span: 16,\n            },\n        };\n\n        const onFinish = (values) => {\n            console.log('Success:', values);\n          };\n        \n        const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n        };\n          \n        return (\n            <div>\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{\n                        anonymous: false,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    >\n                    <Form.Item\n                        label=\"First Name\"\n                        name=\"first_name\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your first name or select Anonymous!',\n                        },\n                        ]}>\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout} name=\"anynoumous\" valuePropName=\"checked\">\n                        <Checkbox>Anonymous</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Location\"\n                        name=\"location\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please input your location!',\n                        },\n                        ]}>\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"How was your experience?\"\n                        name=\"journal\"\n                        rules={[\n                        {\n                            required: true,\n                            message: 'Please write a few words about your feeling!',\n                        },\n                        ]}>\n                        <Input.TextArea/>\n                    </Form.Item>\n\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default SharePage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}